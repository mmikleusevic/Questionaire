@using Shared.Models
<div class="col-md-12">
    <label class="col-form-label">@LabelText:<span class="text-danger">*</span></label>
    <div class="dropdown">
        <input @ref="inputElement"
               @bind="searchQuery"
               Placeholder="Search categories"
               @onfocus="OnFocus"
               @onblur="HideDropdown"
               @oninput="e => SearchCategories(e.Value?.ToString())"
               @onkeydown="HandleKeyDown"
               class="form-control"
               MaxLength="100">

        @if (showDropdown && searchResults.Count > 0)
        {
            <ul class="dropdown-menu show" @onmousedown:preventDefault>
                @foreach (var (result, index) in searchResults.Select((r, i) => (r, i)))
                {
                    <li>
                        <a class="dropdown-item @(index == selectedIndex ? "active" : "")"
                           id="@($"category-{index}")"
                           @onmousedown="() => SelectCategory(index)">@result.CategoryName
                        </a>
                    </li>
                }
            </ul>
        }
    </div>
    <div class="categories-row">
        @if (SelectedCategories != null)
        {
            foreach (CategoryExtendedDto category in SelectedCategories)
            {
                <span class="category-item">
                    @category.CategoryName
                    <span class="remove-category" @onclick="() => RemoveCategory(category)">X</span>
                </span>
            }
        }
        else if (SelectedCategory != null && SelectedCategory?.Id != 0)
        {
            <span class="category-item">
                @SelectedCategory?.CategoryName
                <span class="remove-category" @onclick="() => RemoveCategory(null)">X</span>
            </span>
        }
    </div>
</div>